pipeline {
    agent any

    environment {
        GIT_REPO = 'https://github.com/ihebkhalfallah/Groupe-5-ARCTIC01-2425.git'
        BRANCH = 'main'
        GIT_CREDENTIALS_ID = 'jenkins-pipeline'
        SONAR_TOKEN = 'SONAR_TOKEN'
    }

    stages {
        stage('Clone Repository') {
            steps {
                echo "Cloning branch '${BRANCH}' from '${GIT_REPO}'"
                git credentialsId: "${GIT_CREDENTIALS_ID}", branch: "${BRANCH}", url: "${GIT_REPO}"
            }
        }

        stage('Clean Target Directory') {
            steps {
                echo "Cleaning target directory..."
                sh 'mvn clean'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv("${SONARQUBE_ENV}") {
                    sh "mvn sonar:sonar -Dsonar.url=${SONARQUBE_SERVER} -Dsonar.login=${SONAR_TOKEN}"
                }
            }
        }

        stage('Compile Source Code') {
            steps {
                echo "Compiling source code..."
                sh 'mvn compile'
            }
        }

        stage('Test') {
            steps {
                echo "Running tests..."
                sh 'mvn test'
            }
        }

        stage('Build JAR') {
            steps {
                echo "Packaging the application..."
                sh 'mvn package'
            }
        }

        stage('Deploy') {
            steps {
                echo "Deploying artifact to remote repository..."
                sh 'mvn deploy'
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline completed successfully!'
        }
        failure {
            echo '‚ùå Pipeline failed. Please check the logs.'
        }
        always {
            echo 'üîÅ Pipeline execution finished.'
        }
    }
}
